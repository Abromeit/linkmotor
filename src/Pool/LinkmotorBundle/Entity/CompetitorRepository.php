<?php

namespace Pool\LinkmotorBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CompetitorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CompetitorRepository extends EntityRepository
{
    /**
     * @param Project $project
     *
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getQueryForCompetitorIndex(Project $project)
    {
        $query = $this->getEntityManager()
            ->getRepository('PoolLinkmotorBundle:Competitor')
            ->createQueryBuilder('c')
            ->where('c.project = :project')
            ->setParameter('project', $project->getId());

        return $query;
    }

    /**
     * @return Competitor|null
     */
    public function getNextCompetitorToImport()
    {
        $competitors = $this->getEntityManager()
            ->createQuery(
                "SELECT c
                 FROM PoolLinkmotorBundle:Competitor c
                 WHERE c.importInterval > 0 AND (c.lastImportAt IS NULL OR DATE_SUB(:now, c.importInterval, 'DAY') >= c.lastImportAt)
                 ORDER BY c.lastImportAt ASC"
            )
            ->setMaxResults(1)
            ->setParameter('now', new \DateTime())
            ->getResult();

        if ($competitors) {
            return $competitors[0];
        }

        return null;
    }

    /**
     * @return int
     */
    public function getTotalCount()
    {
        return $this->getEntityManager()
            ->getRepository('PoolLinkmotorBundle:Competitor')
            ->createQueryBuilder('c')
            ->select('COUNT(c)')
            ->getQuery()
            ->getSingleScalarResult();
    }
}
